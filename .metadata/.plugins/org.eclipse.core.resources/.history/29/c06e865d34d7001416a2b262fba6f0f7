package co.com.eafit.conferre.conferencias.business;

import java.util.Collection;

import co.com.eafit.conferre.conferencias.data.dac.ConferenciaDAO;
import co.com.eafit.conferre.conferencias.data.factory.FactoryDAO;
import co.com.eafit.conferre.data.to.ConferenciaTO;
import co.com.eafit.conferre.generics.GenericDTO;
import co.com.eafit.conferre.generics.UnitOfWork;
import co.com.eafit.conferre.support.ExceptionUnitOfWork;
import co.com.eafit.conferre.support.ExceptionValidation;

public class FindConferenciaUseCase implements UnitOfWork {

	@Override
	public Collection<GenericDTO> execute(GenericDTO parametros) throws ExceptionUnitOfWork {
		ConferenciaTO conferenciaTO = (ConferenciaTO) parametros;
		Collection<GenericDTO> resultado = null;
		try {
			int peticion = validarDatosConferencia(conferenciaTO);
			if(peticion == 0){
				ConferenciaDAO conferenciaDAO = FactoryDAO.createConferenciaDAO();
				resultado = conferenciaDAO.read(conferenciaTO);
			}else{
				
			}
			
		} catch (ExceptionValidation e) {
			throw new ExceptionUnitOfWork(e);
		}
		
		return resultado;
	}
	
	//retorna  0:normal; 1: si se pide todo;
	private int validarDatosConferencia(ConferenciaTO conferenciaTO) throws ExceptionValidation{
		if(conferenciaTO.getNombre() == null){
			throw new ExceptionValidation("El nombre de la conferencia no puede ser nulo");
		}else if(conferenciaTO.getNombre().equals("*")){
			return 1;
		}
		return 0;
		
	}

}
